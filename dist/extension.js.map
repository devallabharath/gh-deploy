{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://gh-deploy/./src/extension.ts","webpack://gh-deploy/./src/utils.ts","webpack://gh-deploy/external commonjs \"vscode\"","webpack://gh-deploy/external node-commonjs \"child_process\"","webpack://gh-deploy/external node-commonjs \"fs\"","webpack://gh-deploy/webpack/bootstrap","webpack://gh-deploy/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deactivate = exports.activate = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst utils_1 = require(\"./utils\");\nconst vscode_1 = require(\"vscode\");\nconst defaultConfig = {\n    defaultFromBranch: 'main',\n    defaultToBranch: 'website',\n    defaultFolder: 'build',\n    defaultCommitMessage: 'update',\n    defaultPreTask: 'skip',\n};\nfunction activate(context) {\n    const quickPick = async (items, title, placeHolder, canPickMany = false) => await vscode_1.window.showQuickPick(items, { title, placeHolder, canPickMany });\n    const quickInput = async (title, placeHolder, prompt, password = false) => await vscode_1.window.showInputBox({ title, placeHolder, prompt, password });\n    const Git = () => {\n        const dir = vscode_1.workspace.workspaceFolders?.[0].uri.path;\n        if (!dir)\n            return 'no work folder found';\n        return (0, utils_1.gitInfo)(dir);\n    };\n    const Config = async () => {\n        const errs = ['no work folder found', 'User cancelled', 'No remotes available'];\n        const git = await Git();\n        if (typeof git === 'string')\n            return Promise.reject(git);\n        const config = vscode_1.workspace.getConfiguration('gh-deploy');\n        const Get = (id) => {\n            const value = config.get(id);\n            if (!value || value === ' ' || value === '')\n                return defaultConfig[id];\n            return value;\n        };\n        const fromBranch = await resolveFromBranch(git.Locals);\n        if (errs.includes(fromBranch))\n            return Promise.reject(fromBranch);\n        const toBranch = await resolveToBranch(fromBranch, Get('defaultToBranch'), git.Remotes);\n        if (errs.includes(toBranch))\n            return Promise.reject(toBranch);\n        const folder = await resolveFolder(git.Root, Get('defaultFolder'));\n        if (errs.includes(folder))\n            return Promise.reject(folder);\n        const commit = await resolveCommit(Get('defaultCommitMessage'));\n        if (errs.includes(commit))\n            return Promise.reject(commit);\n        const preTask = await resolveTask(Get('defaultPreTask'));\n        if (errs.includes(preTask))\n            return Promise.reject(preTask);\n        const auth = await resolveAuth();\n        if (typeof auth === 'string')\n            return Promise.reject(auth);\n        return Promise.resolve({ git, fromBranch, toBranch, folder, commit, preTask });\n    };\n    const stashChanges = async (Root) => {\n        const name = await quickInput('GH-Pages: Stash files (1/6)', 'Enter a name to stash..', 'Stash Name');\n        if (!name || name === '' || name === ' ')\n            return Promise.reject('User cancelled');\n        const msg = await (0, utils_1.shell)(Root, `git stash save '${name}'`, 'Git Stash');\n        if (msg === 'Git Stash')\n            return Promise.reject(msg);\n        return Promise.resolve(name);\n    };\n    const resolveChanges = (Root) => (0, utils_1.shell)(Root, 'git status --porcelain', 'Git status')\n        .then(async (status) => {\n        if (status === '')\n            return Promise.resolve(true);\n        const proceed = await quickPick(['Stash them', 'Exit'], 'GH-Pages: Uncommited Files', 'You have uncommited changes, stash to continue...');\n        if (!proceed || proceed === 'Exit')\n            return Promise.reject('User cancelled');\n        return Promise.resolve(stashChanges(Root));\n    })\n        .catch(msg => Promise.reject(msg));\n    const resolveCurrent = async (Root, From, Progress) => {\n        Progress.report({ increment: 0, message: `Switching to '${From}'...` });\n        return (0, utils_1.shell)(Root, `git checkout ${From}`, `Git Checkout`)\n            .then(() => {\n            Progress.report({ increment: 11, message: 'Pulling from remote...' });\n            return (0, utils_1.shell)(Root, 'git pull', 'Git Pull');\n        })\n            .catch(msg => Promise.reject(msg));\n    };\n    const resolveFromBranch = async (Locals) => {\n        if (Locals.includes('main'))\n            return 'main';\n        const possible = Locals.filter(l => l === 'main' || l === 'master');\n        if (possible.length > 0)\n            return possible[0];\n        const from = await quickPick(Locals, 'GH-Pages: From Branch (1/6)', 'Pick a \"from\" branch');\n        if (!from)\n            return 'User cancelled';\n        return from;\n    };\n    const resolveToBranch = async (From, To, Remotes) => {\n        let options;\n        if (Remotes.includes(To)) {\n            options = [`Default: ${To}`, ...Remotes.filter(r => r !== From && r !== To)];\n        }\n        else {\n            options = [...Remotes.filter(r => r !== From)];\n        }\n        const pick = await quickPick(options, 'GH-Pages: To Branch (2/6)', 'Select an option for \"To\" branch');\n        if (!pick)\n            return 'User cancelled';\n        if (pick === `Default: ${To}`)\n            return To;\n        return pick;\n    };\n    const resolveFolder = async (Root, Folder) => {\n        const defaults = ['build', 'release', 'dist', 'out'];\n        const pick = async (options) => {\n            const option = await quickPick(options, 'GH-Pages: Deploy Folder (3/6)', 'Select an option for deploy \"Folder\"');\n            if (!option)\n                return 'User cancelled';\n            return option;\n        };\n        const input = async () => {\n            const folder = await quickInput('GH-Pages: Deploy Folder (3/6)', 'Eg: build or dist', 'Folder Name');\n            if (!folder)\n                return 'User cancelled';\n            return folder;\n        };\n        let possible = defaults.filter(dir => fs_1.default.existsSync(`${Root}/${dir}`));\n        possible = possible.filter(dir => dir !== Folder);\n        let option;\n        if (fs_1.default.existsSync(`${Root}/${Folder}`)) {\n            option = await pick([Folder, ...possible, 'Other']);\n            if (option === 'Other')\n                return input();\n            return option;\n        }\n        if (possible.length === 0)\n            return input();\n        option = await pick([...possible, 'Other']);\n        if (option === 'Other')\n            return input();\n        return option;\n    };\n    const resolveCommit = async (defaultMsg) => {\n        const commit = await quickInput('GH-Pages: Commit Message (4/6)', 'Ex: version v0.5, Hotfix-#21', 'Enter Commit message');\n        if (!commit)\n            return 'User cancelled';\n        if (commit === '' || commit === ' ')\n            return defaultMsg;\n        return commit;\n    };\n    const resolveTask = async (Task) => {\n        const proceed = await quickPick(Task === 'skip' ? ['Default: Skip', 'Other'] : [`Default: '${Task}'`, 'Other', 'Skip'], 'GH-Pages: Pre Deploy Task (5/6)', 'Select an option for preDeploy \"Task\"');\n        if (!proceed)\n            return 'User cancelled';\n        if (proceed === 'Skip' || proceed === 'Default: Skip')\n            return 'echo';\n        if (proceed === `Default: '${Task}'`)\n            return Task;\n        const task = await quickInput('GH-Pages: Pre Deploy Task (5/6)', 'Enter pre deploy command', 'pre Deploy task');\n        if (!task || task === '' || task === ' ')\n            return 'User cancelled';\n        return task;\n    };\n    const resolveAuth = async () => {\n        const auth = await quickInput('GH-Pages: Authentication (6/6)', 'Enter \"deploy\" to deploy...', 'Enter \"deploy\" to continue');\n        if (!auth)\n            return 'User cancelled';\n        if (auth !== 'deploy')\n            return 'Authentication failed';\n        return true;\n    };\n    const Deploy = async (Root, Folder, To, Commit, Progess) => {\n        Progess.report({ increment: 33, message: 'Creating temperary worktree' });\n        return (0, utils_1.shell)(Root, `git --work-tree ${Folder} checkout --orphan ${To}-deploy`, 'Git checkout')\n            .then(() => {\n            Progess.report({ increment: 44, message: 'Adding files to worktree' });\n            return (0, utils_1.shell)(Root, `git --work-tree ${Folder} add --all`, 'Staging files');\n        })\n            .then(() => {\n            Progess.report({ increment: 55, message: 'Commiting files in worktree' });\n            return (0, utils_1.shell)(Root, `git --work-tree ${Folder} commit -m '${Commit}'`, 'Git commit');\n        })\n            .then(() => {\n            Progess.report({ increment: 66, message: 'Pushing to remote branch' });\n            return (0, utils_1.shell)(Root, `git push origin HEAD:${To} --force`, 'Git push');\n        })\n            .catch(msg => Promise.reject(msg));\n    };\n    const cleanUp = async (Root, To, Prev, Progess) => {\n        Progess.report({ increment: 77, message: 'Switching to prev branch' });\n        return (0, utils_1.shell)(Root, `git checkout --force ${Prev}`, 'Git Checkout')\n            .then(() => {\n            Progess.report({ increment: 88, message: 'Cleaning temp worktree' });\n            return (0, utils_1.shell)(Root, `git branch -D ${To}-deploy`, 'Clean up');\n        })\n            .catch(msg => Promise.reject(msg));\n    };\n    const disposable = vscode_1.commands.registerCommand('gh-deploy.deploy', () => {\n        Config()\n            .then(({ git, fromBranch, toBranch, folder, commit, preTask }) => {\n            Promise.resolve()\n                .then(() => resolveChanges(git.Root))\n                .then(() => {\n                return vscode_1.window.withProgress({\n                    location: vscode_1.ProgressLocation.Notification,\n                    title: 'GH Deploy',\n                    cancellable: false,\n                }, async (progress, token) => {\n                    // token.onCancellationRequested(() => Promise.reject('User cancelled'))\n                    return resolveCurrent(git.Root, fromBranch, progress)\n                        .then(() => {\n                        progress.report({ increment: 22, message: 'Running Pre Deploy Task...' });\n                        return (0, utils_1.shell)(git.Root, preTask, 'PreDeploy');\n                    })\n                        .then(() => Deploy(git.Root, folder, toBranch, commit, progress))\n                        .then(() => cleanUp(git.Root, toBranch, git.Current, progress))\n                        .then(() => {\n                        progress.report({ increment: 100, message: 'Successfully Deployed' });\n                    })\n                        .catch(msg => vscode_1.window.showErrorMessage(msg));\n                });\n            })\n                .then(() => vscode_1.window.showInformationMessage(`Deployed from ${fromBranch} to ${toBranch}`))\n                .catch(msg => vscode_1.window.showErrorMessage(msg));\n        })\n            .catch(msg => vscode_1.window.showErrorMessage(msg));\n    });\n    context.subscriptions.push(disposable);\n}\nexports.activate = activate;\nfunction deactivate() { }\nexports.deactivate = deactivate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gitInfo = exports.shell = void 0;\nconst child_process_1 = require(\"child_process\");\nconst ErrMsg = (title, dir, e, err) => {\n    const parts = e.toString().split(':');\n    return `${title}: ${parts[1]} \\n dir: ${dir} \\n ${err.replace('sh: ', '')}`;\n};\nconst shell = (dir, cmd, msg) => {\n    return new Promise(function (resolve, reject) {\n        (0, child_process_1.exec)(`cd ${dir} && ${cmd}`, (e, out, err) => {\n            if (e) {\n                e.toString().replace('Error', msg);\n                return reject(ErrMsg(msg, dir, e, err));\n            }\n            return resolve(out.trim());\n        });\n    });\n};\nexports.shell = shell;\nconst getRoot = (dir) => shell(dir, 'git rev-parse --show-toplevel', 'Git stats')\n    .then(root => Promise.resolve({ Root: root }))\n    .catch(msg => Promise.reject(msg));\nconst getCurrent = (info) => shell(info.Root, 'git symbolic-ref HEAD -q', 'Git current')\n    .then(result => {\n    const c = result.replace(/^refs\\/heads\\//, '');\n    return Promise.resolve({ ...info, Current: c });\n})\n    .catch(msg => Promise.reject(msg));\nconst getBranches = (info) => shell(info.Root, \"git branch -a | awk -F ' +' '! /(no branch)/ {print $2}'\", 'Git branches')\n    .then(branches => {\n    const l = branches.split('\\n');\n    if (l.length === 0)\n        return Promise.reject(new Error('No branches available'));\n    const r = [];\n    while (l[l.length - 1].includes('remotes/origin/')) {\n        r.push(l.pop()?.replace('remotes/origin/', ''));\n    }\n    if (r.length === 0)\n        return Promise.reject(new Error('No remotes available'));\n    return Promise.resolve({ ...info, Locals: l, Remotes: r });\n})\n    .catch(msg => Promise.reject(msg));\nconst gitInfo = (dir) => getRoot(dir)\n    .then(info => getCurrent(info))\n    .then(info1 => getBranches(info1))\n    .catch(msg => Promise.reject(msg));\nexports.gitInfo = gitInfo;\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","deactivate","activate","fs_1","utils_1","vscode_1","defaultConfig","defaultFromBranch","defaultToBranch","defaultFolder","defaultCommitMessage","defaultPreTask","context","quickPick","async","items","title","placeHolder","canPickMany","window","showQuickPick","quickInput","prompt","password","showInputBox","resolveFromBranch","Locals","includes","possible","filter","l","length","resolveToBranch","From","To","Remotes","options","r","pick","resolveFolder","Root","Folder","input","option","dir","default","existsSync","resolveCommit","defaultMsg","commit","resolveTask","Task","proceed","task","resolveAuth","auth","disposable","commands","registerCommand","errs","git","workspace","workspaceFolders","uri","path","gitInfo","Git","Promise","reject","config","getConfiguration","Get","id","get","fromBranch","toBranch","folder","preTask","resolve","Config","then","resolveChanges","shell","status","name","msg","stashChanges","catch","withProgress","location","ProgressLocation","Notification","cancellable","progress","token","Progress","report","increment","message","resolveCurrent","Commit","Progess","Deploy","Prev","cleanUp","Current","showErrorMessage","showInformationMessage","subscriptions","push","child_process_1","cmd","exec","e","out","err","toString","replace","split","ErrMsg","trim","root","getRoot","info","result","c","getCurrent","info1","getBranches","branches","Error","pop","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}